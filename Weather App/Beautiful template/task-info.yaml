type: edu
files:
- name: web/app.py
  visible: true
  text: |
    from flask import Flask
    import sys

    app = Flask(__name__)

    # write your code here

    # don't change the following way to run flask:
    if __name__ == '__main__':
        if len(sys.argv) > 1:
            arg_host, arg_port = sys.argv[1].split(':')
            app.run(host=arg_host, port=arg_port)
        else:
            app.run()
  learner_created: false
- name: tests.py
  visible: false
  text: |
    from hstest import FlaskTest, CheckResult, WrongAnswer
    from hstest import dynamic_test
    from hstest.dynamic.security.exit_handler import ExitHandler

    import asyncio
    from pyppeteer import launch


    class FlaskProjectTest(FlaskTest):
        source = 'web.app'

        async def test_response_async(self):
            browser = await launch()
            page = await browser.newPage()
            try:
                await page.goto(self.get_url())
            except Exception:
                raise WrongAnswer(f"Can't access the main page with URL '{self.get_url()}'")
            await browser.close()

        @dynamic_test(order=1)
        def test_response(self):
            ExitHandler.revert_exit()
            asyncio.get_event_loop().run_until_complete(self.test_response_async())
            return CheckResult.correct()

        async def test_main_page_structure_async(self):
            browser = await launch()
            page = await browser.newPage()

            await page.goto(self.get_url())

            cards_div = await page.querySelector('div.cards')

            if cards_div is None:
                raise WrongAnswer("Can't find <div> block with class 'cards'")

            cards = await page.querySelectorAll('div.card')

            if len(cards) == 0:
                raise WrongAnswer("Can't find <div> blocks with class 'card'")

            if len(cards) != 3:
                raise WrongAnswer(f"Found {len(cards)} <div> blocks with class 'card', but should be 3!")

            for card in cards:
                degrees = await card.querySelector('div.degrees')
                if degrees is None:
                    raise WrongAnswer(
                        "One of the <div> blocks with card class 'card' doesn't contain <div> block with class 'degrees'")
                state = await card.querySelector('div.state')
                if state is None:
                    raise WrongAnswer(
                        "One of the <div> blocks with card class 'card' doesn't contain <div> block with class 'state'")
                city = await card.querySelector('div.city')
                if city is None:
                    raise WrongAnswer(
                        "One of the <div> blocks with card class 'card' doesn't contain <div> block with class 'city'")

            await browser.close()

            return CheckResult.correct()

        @dynamic_test(order=2)
        def test_main_page_structure(self):
            asyncio.get_event_loop().run_until_complete(self.test_main_page_structure_async())
            return CheckResult.correct()


    if __name__ == '__main__':
        FlaskProjectTest().run_tests()
  learner_created: false
feedback_link: https://hyperskill.org/projects/164/stages/852/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Wed, 24 Feb 2021 01:00:54 UTC
record: 2
